version: 2.1

orbs:
  heroku: circleci/heroku@1.2.6

jobs:
  build:
    docker:
      - image: "cimg/php:8.1.1"
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DB: locastic
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_PASSWORD: ""
      - image: mysql:5.7
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --innodb-file-format=Barracuda
        environment:
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    working_directory: ~/apiblog

    steps:
      - checkout
      - run: sudo apt update
      - run: sudo apt install -y libsqlite3-dev zlib1g-dev mariadb-client zlib1g-dev
      - run: sudo docker-php-ext-install zip pdo_mysql
      - run: sudo docker-php-ext-enable zip pdo_mysql
      - run: sudo composer self-update
      - heroku/install
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-

      - run: composer install -n --prefer-dist --no-scripts
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - run: cp .env .env.local
      - run: symfony console security:check
      - run: curl -L https://cs.symfony.com/download/php-cs-fixer-v2.phar -o php-cs-fixer
      - run: chmod a+x php-cs-fixer
      - run: ./php-cs-fixer --diff --dry-run -v --allow-risky=yes fix
      - run: php -d memory_limit=-1 vendor/bin/phpstan analyse src --level max
      - run: php -d memory_limit=-1 vendor/bin/simple-phpunit
      - run:
          name: Run web server
          command: symfony console server:run
          background: true
      - run:
          name: "Run PhpUnit tests"
          command: ./bin/phpunit

workflows:
  heroku_deploy:
    jobs:
      - build
      - heroku/deploy-via-git:
          requires:
            - build
          filters:
            branches:
              only: main
          # pre-steps:
          #   - run: command-that-run-before-deploying
          post-steps:
            - run: symfony console doctrine:datebase:create
